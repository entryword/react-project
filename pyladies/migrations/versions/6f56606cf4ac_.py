# coding=UTF-8

"""empty message

Revision ID: 6f56606cf4ac
Revises: f97fe6bfeec6
Create Date: 2019-03-25 03:35:21.119456

"""
import json
import re

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '6f56606cf4ac'
down_revision = 'f97fe6bfeec6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    rows = conn.execute("SELECT * FROM event_apply").fetchall()
    for row in rows:
        apply = json.loads(row.apply)
        start_time = row.start_time
        end_time = row.end_time
        limit = u"限女"
        for item in apply:
            item["start_time"] = start_time
            item["end_time"] = end_time
            item["limit"] = limit
            item["price"] = u"一般人{}元，學生{}元".format(item["price"]["default"], item["price"]["student"])

        op.execute(text("""
            UPDATE event_apply
            SET apply = :apply
            WHERE id = :id
        """).bindparams(apply=json.dumps(apply), id=row.id))

    op.drop_column('event_apply', 'limit')
    op.drop_column('event_apply', 'limit_desc')
    op.drop_column('event_apply', 'start_time')
    op.drop_column('event_apply', 'end_time')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event_apply', sa.Column('end_time', sa.String(length=128), nullable=True))
    op.add_column('event_apply', sa.Column('start_time', sa.String(length=128), nullable=True))
    op.add_column('event_apply', sa.Column('limit_desc', sa.Text(), nullable=True))
    op.add_column('event_apply', sa.Column('limit', sa.JSON(), nullable=True))

    conn = op.get_bind()
    rows = conn.execute("SELECT * FROM event_apply").fetchall()
    for row in rows:
        apply = json.loads(row.apply)
        start_time = apply[0]["start_time"]
        end_time = apply[0]["end_time"]
        limit = {
            "gender": u"限女",
            "age": u"不限"
        }
        for item in apply:
            result = re.match("一般人(\d+)元，學生(\d+)元", item["price"])
            item["price"] = {}
            item["price"]["default"] = int(result.group(1))
            item["price"]["student"] = int(result.group(2))
            del item["start_time"]
            del item["end_time"]
            del item["limit"]

        op.execute(text("""
            UPDATE event_apply
            SET apply = :apply,
            `limit` = :limit,
            start_time = :start_time,
            end_time = :end_time
            WHERE id = :id
        """).bindparams(apply=json.dumps(apply), limit=json.dumps(limit), start_time=start_time, end_time=end_time, id=row.id))
    # ### end Alembic commands ###
