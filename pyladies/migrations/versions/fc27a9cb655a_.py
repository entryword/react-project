"""Add role and user_role tables

Revision ID: fc27a9cb655a
Revises: 6473925ac6ef
Create Date: 2019-09-30 05:48:00.172082

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'fc27a9cb655a'
down_revision = '6473925ac6ef'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('permission', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_to_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )

    op.add_column('user', sa.Column('mail', sa.String(length=128), nullable=True))
    op.add_column('user', sa.Column('status', sa.Integer(), nullable=True, default=0))
    ## add status, mail for previos records
    conn = op.get_bind()
    rows = conn.execute("SELECT * FROM user").fetchall()
    for i, row in enumerate(rows, 1):
        status = 0
        mail = "migration_{}@pyladies.com".format(i)

        op.execute(sa.text("""
            UPDATE user
            SET status = :status,
            mail = :mail
            WHERE id = :id
        """).bindparams(status=status, mail=mail, id=row.id))
    op.alter_column('user', 'mail',
                    existing_type=sa.String(length=128),
                    nullable=False)
    op.alter_column('user', 'status',
                    existing_type=sa.Integer(),
                    nullable=False)
    op.create_unique_constraint('user_mail_uniq', 'user', ['mail'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('user_mail_uniq', 'user', type_='unique')
    op.drop_column('user', 'status')
    op.drop_column('user', 'mail')
    op.drop_table('user_to_role')
    op.drop_table('role')
    # ### end Alembic commands ###
