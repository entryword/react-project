# encoding: UTF-8

"""empty message

Revision ID: 65bd75fa4d4a
Revises: 6473925ac6ef
Create Date: 2019-09-05 08:55:13.650295

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from sqlalchemy.sql import text

from app.constant import DEFAULT_PLACE_ID

# revision identifiers, used by Alembic.
revision = '65bd75fa4d4a'
down_revision = 'fc27a9cb655a'
branch_labels = None
depends_on = None


def upgrade():
    # # ### commands auto generated by Alembic - please adjust! ###
    # insert default place if it does not exist in table place
    op.execute(text("""
        INSERT IGNORE INTO place (id, name, addr, map)
            VALUES(:default_id, '未定', '未定', '');
        """).bindparams(default_id=DEFAULT_PLACE_ID))
    # set place_id to default for those which set to NULL before in table event_basic
    op.execute(text("""
        UPDATE event_basic
            SET place_id = :default_id
            WHERE place_id IS NULL;
        """).bindparams(default_id=DEFAULT_PLACE_ID))
    op.drop_constraint('event_basic_ibfk_1', 'event_basic', type_='foreignkey')
    op.alter_column('event_basic', 'place_id',
                    existing_type=mysql.INTEGER(display_width=11),
                    server_default='%s' % DEFAULT_PLACE_ID,
                    nullable=False)
    op.create_foreign_key(
        'event_basic_ibfk_1', 'event_basic', 'place', ['place_id'], ['id'], ondelete='NO ACTION')
    # # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('event_basic_ibfk_1', 'event_basic', type_='foreignkey')
    op.alter_column('event_basic', 'place_id',
                    existing_type=mysql.INTEGER(display_width=11),
                    nullable=True)
    op.create_foreign_key(
        'event_basic_ibfk_1', 'event_basic', 'place', ['place_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###
